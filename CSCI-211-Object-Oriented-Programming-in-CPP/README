This is all the Homework for CSCI 211 (Object Oriented Programming in C++) for Dr. Waxman.
I took this class in Spring 2016.

Note:
Homework 3 is not here because it is asking how to mathmatically prove that Homework 1 is impossible.
To do thid I just used a proof by induction.
I let n=1. Therefore n*n=01. This does NOT match the requirement of the last two digits being odd.
With my "base case" of n=1 being true that the last two digits are not odd I must prove this statement holds for n+1.
(n+1)(n+1)= n^2+2n+1
If (n+1)(n+1) is an even number. then if I do modulo 2, I get 00.
If (n+1)(n+1) is an odd number, then if I do modulo 2, I get 01.
These two situtations imply that if I do i*i % 2, given that i >= 1. I will always get either 00 or 01 as the last digits. Therefore, getting the last two digits being odd is impossible!
